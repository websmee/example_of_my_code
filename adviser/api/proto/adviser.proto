syntax = "proto3";

package proto;

option go_package = ".;proto";

service Adviser {
  rpc GetAdvices (GetAdvicesRequest) returns (GetAdvicesReply) {}
}

message GetAdvicesRequest {}

message GetAdvicesReply {
  map<int64, Advice> advices = 1;
  string err = 2;
}

message Advice {
  AdviceQuote quote = 1;
  map<int64, AdviceCandlestick> candlesticks = 2;
  float price = 3;
  float amount = 4;
  float take_profit_price = 5;
  float take_profit_amount = 6;
  float stop_loss_price = 7;
  float stop_loss_amount = 8;
  int64 leverage = 9;
  int64 expires_at = 10;
}

message AdviceQuote {
  string symbol = 2;
  string name = 3;
}

message AdviceCandlestick {
  float open = 1;
  float low = 2;
  float high = 3;
  float close = 4;
  float adj_close = 5;
  int64 volume = 6;
  int64 timestamp = 7;
  string interval = 8;
}